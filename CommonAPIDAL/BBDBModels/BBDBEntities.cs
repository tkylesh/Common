// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace CommonAPIDAL.BBDBModels;

public partial class BBDBEntities : DbContext
{
    public BBDBEntities(DbContextOptions<BBDBEntities> options)
        : base(options)
    {
    }

    public virtual DbSet<CreditReport> CreditReport { get; set; }

    public virtual DbSet<ISOMaster> ISOMaster { get; set; }

    public virtual DbSet<ISO_XML_Backup_Hdr> ISO_XML_Backup_Hdr { get; set; }

    public virtual DbSet<PolicyCoverageInterval> PolicyCoverageInterval { get; set; }

    public virtual DbSet<PolicyData> PolicyData { get; set; }

    public virtual DbSet<PolicySubject> PolicySubject { get; set; }

    public virtual DbSet<PolicySubjectHistory> PolicySubjectHistory { get; set; }

    public virtual DbSet<PrefillOrderHistory> PrefillOrderHistory { get; set; }

    public virtual DbSet<PrefillPolicyData> PrefillPolicyData { get; set; }

    public virtual DbSet<Prefill_CV_Clue_ErrorLog> Prefill_CV_Clue_ErrorLog { get; set; }

    public virtual DbSet<RMTVehicleScores> RMTVehicleScores { get; set; }

    public virtual DbSet<ResultMaster> ResultMaster { get; set; }

    public virtual DbSet<Vehicles_From_ISO> Vehicles_From_ISO { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<CreditReport>(entity =>
        {
            entity.HasKey(e => e.cID).IsClustered(false);

            entity.HasIndex(e => e.rmID, "IX_CreditReport_rmID").IsClustered();

            entity.HasOne(d => d.rm).WithMany(p => p.CreditReport)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_CreditReport_ResultMaster");
        });

        modelBuilder.Entity<ISOMaster>(entity =>
        {
            entity.Property(e => e.CreateDate).HasDefaultValueSql("(getdate())");
            entity.Property(e => e.MiddleInitial).IsFixedLength();
        });

        modelBuilder.Entity<ISO_XML_Backup_Hdr>(entity =>
        {
            entity.HasKey(e => e.HdrID).HasName("PK__ISO_XML_Backup_H__53A266AC");

            entity.Property(e => e.Date).HasDefaultValueSql("(getdate())");
        });

        modelBuilder.Entity<PolicyCoverageInterval>(entity =>
        {
            entity.HasOne(d => d.ISOMaster).WithMany(p => p.PolicyCoverageInterval)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PolicyCoverageInterval_ISOMaster");
        });

        modelBuilder.Entity<PolicyData>(entity =>
        {
            entity.Property(e => e.PolicyType).HasDefaultValue("");

            entity.HasOne(d => d.ISOMaster).WithMany(p => p.PolicyData)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PolicyData_ISOMaster");
        });

        modelBuilder.Entity<PolicySubject>(entity =>
        {
            entity.HasIndex(e => e.Name, "IX_PolicySubject_Name").HasFillFactor(100);

            entity.HasOne(d => d.Policy).WithMany(p => p.PolicySubject).HasConstraintName("FK_PolicySubject_PolicyData");
        });

        modelBuilder.Entity<PolicySubjectHistory>(entity =>
        {
            entity.HasOne(d => d.PolicySubject).WithMany(p => p.PolicySubjectHistory).HasConstraintName("FK_PolicySubjectHistory_PolicySubject");
        });

        modelBuilder.Entity<PrefillPolicyData>(entity =>
        {
            entity.HasKey(e => e.PrefillPolicyID).HasName("PK__PrefillP__6288EA98C4DEA4BA");
        });

        modelBuilder.Entity<ResultMaster>(entity =>
        {
            entity.HasIndex(e => new { e.NI_LicenseNum, e.NI_DOB, e.OrderDate }, "IX_ResultMaster_DL_DOB").HasFillFactor(100);

            entity.HasIndex(e => new { e.NI_DOB, e.NameFirst, e.NameLast, e.Address, e.City, e.State, e.Zip, e.OrderDate }, "IX_ResultMaster_NI_DOB_NameFirst_NameLast_Address_City_State_Zip_OrderDate").HasFillFactor(100);

            entity.HasIndex(e => new { e.NI_SSN, e.NI_DOB, e.OrderDate }, "IX_ResultMaster_SSN_DOB").HasFillFactor(100);

            entity.Property(e => e.Address).HasDefaultValueSql("((0))");
            entity.Property(e => e.City).HasDefaultValueSql("((0))");
            entity.Property(e => e.NI_DOB).HasDefaultValueSql("(((1)/(1))/(1900))");
            entity.Property(e => e.NI_LicenseNum).HasDefaultValue("DL123");
            entity.Property(e => e.NI_SSN)
                .HasDefaultValueSql("(((111)-(11))-(1111))")
                .IsFixedLength();
            entity.Property(e => e.NameFirst).HasDefaultValueSql("((0))");
            entity.Property(e => e.NameLast).HasDefaultValueSql("((0))");
            entity.Property(e => e.State)
                .HasDefaultValueSql("((0))")
                .IsFixedLength();
            entity.Property(e => e.Zip).HasDefaultValueSql("((0))");
        });

        modelBuilder.Entity<Vehicles_From_ISO>(entity =>
        {
            entity.Property(e => e.LienHolderCity).IsFixedLength();
            entity.Property(e => e.LienHolderName).IsFixedLength();
            entity.Property(e => e.LienHolderState).IsFixedLength();
            entity.Property(e => e.LienHolderStreetAddress).IsFixedLength();
            entity.Property(e => e.LienHolderZipCode).IsFixedLength();
            entity.Property(e => e.insertDate).HasDefaultValueSql("(getdate())");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}